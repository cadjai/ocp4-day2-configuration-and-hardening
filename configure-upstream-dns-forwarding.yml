- name: ' Configure Keycloak Provider | configure-upstream-dns-forwarding.yml'
  hosts: localhost
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - 'vars/vault.yml'
    - 'vars/global.yml'
  vars:
    module: "Config Banner"
    ansible_name_module: "Configure Banner | {{ module }}"
  pre_tasks:
    - name: Install required pip library
      pip:
        name: openshift
        state: present

    - name: Ensure Proper Python dependency is installed for Openshift
      python_requirements_facts:
        dependencies:
          - openshift
          - requests
    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          --token {{ ocp_cluster_token }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - ocp_cluster_token is defined and ocp_cluster_token != ""
      register: login_out

    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          -u {{ ocp_cluster_user }} \
          -p {{ ocp_cluster_user_password }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - not ocp_cluster_token is defined or ocp_cluster_token == ""
      register: login_out

  tasks:
    - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} | patch dns.operator'
      command: >
        {{ openshift_cli }} patch dns.operator --type=merge default -p '{"spec":{"servers":[{"name":"{{ item.key }}", \
             "zones":["{{ item.value.zones | join(',') }}"], \
             "forwardPlugin":{"upstreams":["{{ item.value.upstream_ips | join(',') }}"]}}]}}' 
      with_dict: "{{ upstream_dns_servers }}"
      loop_control:
        index_var: key_cnt
      when:
        - item.key is defined and item.key != ""
        - item.value.zones is defined and item.value.zones | length > 0
        - item.value.upstream_ips is defined and item.value.upstream_ips | length > 0
      register: banner_cr_applied
