- name: Include the devspace namespce manifest playbook
  ansible.builtin.import_playbook: provision-devspace-namespaces-manifests.yml

- name: ' Konductor | Provision UPI Infra | configure-devspace-namespaces.yml'
  hosts: localhost
  vars_files:
    #- 'vars/vault.yml'
    - 'vars/devspace-namespaces.yml'
  vars:
    ansible_python_interpreter: /usr/bin/python3
    module: "Provision devspace Namespaces "
    ansible_name_module: " Konductor | Provision UPI Infra | {{ module }}"

  pre_tasks:
    #- name: Install required pip library
    #  ansible.builtin.pip:
    #    name: openshift
    #    state: present

    - name: Ensure Proper Python dependency is installed for Openshift
      community.general.python_requirements_info:
        dependencies:
          - openshift
          - requests

    - name: Authenticate with the API
      ansible.builtin.command: >
        {{ openshift_cli }} login \
          --token {{ ocp_cluster_token }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - ocp_cluster_token is defined and ocp_cluster_token != ""
      register: login_out

    - name: Authenticate with the API
      ansible.builtin.command: >
        {{ openshift_cli }} login \
          -u {{ ocp_cluster_user }} \
          -p {{ ocp_cluster_user_password }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - not ocp_cluster_token is defined or ocp_cluster_token == ""
      register: login_out

  tasks:
    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} apply | deploy devspace namespaces'
      ansible.builtin.command: >
        {{ openshift_cli }} apply -f {{ playbook_dir }}/{{ namespace_env }}/{{ item.value.username }}-devspaces-namespace.yml 
      with_dict:
        - "{{ devspaces.projects }}"
      register: devspace_ns_rendered 

    - name: '{{ ansible_name_module }} | stat | Check if developer RB for container build scc file exist'
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/{{ namespace_env }}/devspaces-developer-scc-rb.yml"
        get_checksum: false
      register: devspace_developer_cbscc_file_exist

    - name: '{{ ansible_name_module }} | ansible.builtin.command:{{ openshift_cli }} apply | deploy devspace developer container build scc rb'
      when:
        - devspace_developer_cbscc_file_exist.stat is defined
        - devspace_developer_cbscc_file_exist.stat.exists is defined
        - devspace_developer_cbscc_file_exist.stat.exists | bool 
      block:
        - name: '{{ ansible_name_module }} | Create the developer container build SCC rolebinding'
          ansible.builtin.command: >
             {{ openshift_cli }} create -f {{ playbook_dir }}/{{ namespace_env }}/devspaces-developer-scc-rb.yml 
          register: devspace_developer_cbscc_rendered 

      rescue:
        - name: '{{ ansible_name_module }} | Create the developer container build SCC rolebinding'
          ansible.builtin.command: >
             {{ openshift_cli }} replace -f {{ playbook_dir }}/{{ namespace_env }}/devspaces-developer-scc-rb.yml 
          register: devspace_developer_cbscc_rendered 
