kind: CronJob
apiVersion: batch/v1
metadata:
  name: {{ kubeconfig_service_name }} 
  namespace: {{ kubeconfig_job_namespace }} 
  labels:
    template: kubeconfig-backup-cronjob
    app.kubernetes.io/instance: kubeconfig-backup
spec:
  schedule: {{ kubeconfig_cron_jon_schedule_expression | d('25 23 * * 5', true) }}
  startingDeadlineSeconds: 1800
  concurrencyPolicy: Forbid
  suspend: false
  jobTemplate:
    metadata:
    spec:
      activeDeadlineSeconds: 1800
      template:
        metadata:
        spec:
          nodeSelector:
            node-role.kubernetes.io/master: ''
          restartPolicy: Never
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
          securityContext: {}
          containers:
            - resources:
                limits:
                  cpu: 1000m
                  memory: 2000Mi
                requests:
                  cpu: 200m
                  memory: 400Mi
              name: kubeconfig-backup 
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ aws_account_creds_secret }} 
                      key: aws_access_key
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ aws_account_creds_secret }} 
                      key: aws_access_secret
                - name: AWS_BUCKET
                  value: {{ kubeconfig_aws_bucket }} 
                - name: AWS_BUCKET_OBJECT
                  value: {{ kubeconfig_aws_bucket_object }} 
                - name: AWS_DEFAULT_REGION
                  value: {{ aws_region }} 
                - name: AWS_CA_BUNDLE
                  value: {{ aws_ca_bundle_path }} 
              image: {{ aws_cli_image_registry_repository }}/{{ aws_cli_image_name }}
              imagePullPolicy: IfNotPresent
              volumeMounts:
              - mountPath: /host
                name: host
              - mountPath: /etc/pki/ca-trust
                name: ca-trust
              securityContext:
                privileged: true
                runAsUser: 0
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              command: ["/bin/sh"]
              args:
                - -c
                - 'chroot /host sudo mkdir -p /home/core/assets/kubeconfig-backup-$(date +"%d-%m-%Y") && cp /host/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/* /host/home/core/assets/kubeconfig-backup-$(date +"%d-%m-%Y")/ && aws s3 ls "s3://$AWS_BUCKET" 2>&1 || aws s3 mb s3://$AWS_BUCKET --region $AWS_DEFAULT_REGION && aws s3 --region $AWS_DEFAULT_REGION sync /host/home/core/assets/kubeconfig-backup-$(date +"%d-%m-%Y")/ "s3://$AWS_BUCKET/$AWS_BUCKET_OBJECT/kubeconfig-$(date +"%d-%m-%Y")" && rm -rf /host/home/core/assets/kubeconfig-backup-$(date +"%d-%m-%Y")'
          volumes:
            - hostPath:
                path: /
                type: Directory
              name: host
            - hostPath:
                path: /etc/pki/ca-trust
                type: Directory
              name: ca-trust
            - name: aws-creds-secret 
              secret:
                secretName: {{ aws_account_creds_secret }}
          dnsPolicy: ClusterFirst
          nodeSelector:
            node-role.kubernetes.io/master: ""
          restartPolicy: OnFailure
          enableServiceLinks: true
          hostNetwork: true
          hostPID: true
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: {{ kubeconfig_service_account }} 
          serviceAccountName: {{ kubeconfig_service_account }}
          terminationGracePeriodSeconds: 30
          tolerations:
            - operator: Exists
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
