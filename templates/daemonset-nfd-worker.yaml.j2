kind: DaemonSet
apiVersion: apps/v1
metadata:
  annotations:
  name: nfd-worker
  namespace: openshift-nfd
  labels:
    app: nfd-worker
spec:
  selector:
    matchLabels:
      app: nfd-worker
  template:
    metadata:
      labels:
        app: nfd-worker
    spec:
      restartPolicy: Always
      serviceAccountName: nfd-worker
      schedulerName: default-scheduler
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
              - matchExpressions:
                  - key: node-role.kubernetes.io/worker
                    operator: Exists
{% if node_role is defined and node_role != '' and node_role != 'worker' %}
                  - key: node-role.kubernetes.io/{{ node_role }}
                    operator: Exists
{% endif %}
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: nfd-worker
          command:
            - nfd-worker
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: host-boot
              readOnly: true
              mountPath: /host-boot
            - name: host-os-release
              readOnly: true
              mountPath: /host-etc/os-release
            - name: host-sys
              mountPath: /host-sys
            - name: host-usr-lib
              readOnly: true
              mountPath: /host-usr/lib
            - name: host-usr-src
              readOnly: true
              mountPath: /host-usr/src
            - name: nfd-worker-config
              mountPath: /etc/kubernetes/node-feature-discovery
            - name: nfd-hooks
              mountPath: /etc/kubernetes/node-feature-discovery/source.d
            - name: nfd-features
              mountPath: /etc/kubernetes/node-feature-discovery/features.d
            - name: custom-config
              readOnly: true
              mountPath: /etc/kubernetes/node-feature-discovery/custom.d/custom-rules
          terminationMessagePolicy: File
          image: >-
            {{ node_discovery_image | default('registry.redhat.io/openshift4/ose-node-feature-discovery@sha256:707e3acbd593f1606427e12ddddb4f8b0787150d031dea882a41307df04d1946', true) }}
          args:
            - '--server=nfd-master:$(NFD_MASTER_SERVICE_PORT)'
      serviceAccount: nfd-worker
      volumes:
        - name: host-boot
          hostPath:
            path: /boot
            type: ''
        - name: host-os-release
          hostPath:
            path: /etc/os-release
            type: ''
        - name: host-sys
          hostPath:
            path: /sys
            type: ''
        - name: host-usr-lib
          hostPath:
            path: /usr/lib
            type: ''
        - name: host-usr-src
          hostPath:
            path: /usr/src
            type: ''
        - name: nfd-hooks
          hostPath:
            path: /etc/kubernetes/node-feature-discovery/source.d
            type: ''
        - name: nfd-features
          hostPath:
            path: /etc/kubernetes/node-feature-discovery/features.d
            type: ''
        - name: nfd-worker-config
          configMap:
            name: nfd-worker
            items:
              - key: nfd-worker-conf
                path: nfd-worker.conf
            defaultMode: 420
        - name: custom-config
          configMap:
            name: nfd-worker
            items:
              - key: custom-conf
                path: custom.conf
            defaultMode: 420
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - operator: Exists
          effect: NoSchedule
        - key: gpu
          value: dpaas
          effect: NoSchedule
        - key: gpu
          value: dpaas
          effect: NoExecute
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  revisionHistoryLimit: 10
