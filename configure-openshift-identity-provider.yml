- name: ' Configure Keycloak Provider | configure-openshift-identity-provider.yml'
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - 'vars/vault.yml'
    - 'vars/global.yml'
  vars:
    module: "Configure identity providers"
    ansible_name_module: "Configure OCP IDP | {{ module }}"
  pre_tasks:
    - name: Install required pip library
      pip:
        name: openshift
        state: present

    - name: Ensure Proper Python dependency is installed for Openshift
      python_requirements_facts:
        dependencies:
          - openshift
          - requests
    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          --token {{ ocp_cluster_token }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - ocp_cluster_token is defined and ocp_cluster_token != ""
      register: login_out

    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          -u {{ ocp_cluster_user }} \
          -p {{ ocp_cluster_user_password }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - not ocp_cluster_token is defined or ocp_cluster_token == ""
      register: login_out

    - name: "{{ ansible_name_module }} Config keycloak CA"
      when:
        - use_keycloak_ca is defined
        - use_keycloak_ca | bool
        - keycloak_ca_cm_name is defined
        - keycloak_ca_cm_name != ""
      block:
        - name: "{{ ansible_name_module }} | config keycloak CA | check custom ca cm"
          ansible.builtin.stat:
            path: "{{ custom_ca_cm_file }}"
          register: custom_ca_cm_exist

        - name: "{{ ansible_name_module }} | config keycloak CA | check user ca"
          ansible.builtin.shell: >
            {{ openshift_cli }} get cm user-ca-bundle -n openshift-config -o yaml > "{{ custom_ca_cm_file }}"
          ignore_errors: true
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool
          register: user_ca_bundle_exist

        - name: "{{ ansible_name_module }} | config keycloak CA | check custom ca cm"
          ansible.builtin.stat:
            path: "{{ custom_ca_cm_file }}"
          when:
            - user_ca_bundle_exist is defined
            - user_ca_bundle_exist.rc is defined
            - user_ca_bundle_exist.rc == 0
          register: custom_ca_cm_exist

        - name: Remove unecessary metadata from exported file 1 of 7
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            regexp: "creationTimestamp:"
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Remove unecessary metadata from exported file 2 of 7
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            regexp: "selfLink:"
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Remove unecessary metadata from exported file 3 of 7
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            regexp: "uid: "
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Remove unecessary metadata from exported file 4 of 7
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            regexp: "resourceVersion: "
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Remove unecessary metadata from exported file 5 of 7
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            regexp: "openshift.io/generated-by: "
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Add Markers to mark Managed Field block in CM 1 of 2
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            insertbefore: "  managedFields:"
            line: "# BEGIN ANSIBLE MANAGED BLOCK Removing Managed Fields Block"
            backup: "true"
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Add Markers to mark Managed Field block in CM 2 of 2
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            insertafter: "  operation: Update"
            line: "# END ANSIBLE MANAGED BLOCK Removing Managed Fields Block"
            backup: "true"
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Remove unecessary metadata from exported file 6 of 7
          ansible.builtin.blockinfile:
            marker: "# {mark} ANSIBLE MANAGED BLOCK Removing Managed Fields Block"
            path: "{{ custom_ca_cm_file }}"
            backup: "true"
            block: |
              managedFields:
              - apiVersion: v1
                fieldsType: FieldsV1
                fieldsV1:
                  f:data:
                    .: {}
                    f:ca-bundle.crt: {}
                manager: cluster-bootstrap
                operation: Update
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Remove unecessary metadata from exported file 7 of 7
          ansible.builtin.lineinfile:
            path: "{{ custom_ca_cm_file }}"
            regexp: "   time:"
            state: absent
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Update CA CM name in exported file 1 of 2
          ansible.builtin.replace:
            path: "{{ custom_ca_cm_file }}"
            regexp: user-ca-bundle
            replace: "{{ keycloak_ca_cm_name | default('user-custom-ca') }}"
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: Update CA CM name in exported file 2 of 2
          ansible.builtin.replace:
            path: "{{ custom_ca_cm_file }}"
            regexp: ca-bundle.crt
            replace: ca.crt
          when:
            - custom_ca_cm_exist is defined
            - custom_ca_cm_exist.stat is defined
            - custom_ca_cm_exist.stat.isreg is defined
            - custom_ca_cm_exist.stat.isreg | bool

        - name: "{{ ansible_name_module }} | config keycloak CA | create user custom CA CM"
          ansible.builtin.command: >
            {{ openshift_cli }} apply -f "{{ custom_ca_cm_file }}"
          register: keycloak_custom_ca_created

  roles:
    - role: configure-openshift-identity-provider
      provider_type: 'keycloak'
      provider_name: 'keycload-id-claim'
