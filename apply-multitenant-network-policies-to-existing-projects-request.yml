- name: ' Configure Mutitenant Isolation Post Installation | apply-multitenant-network-policies-to-existing-projects-request.yml'
  hosts: localhost
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - 'vars/vault.yml'
    - 'vars/global.yml'
  vars:
    module: "Config Multi Tenant Isolation Post Install"
    ansible_name_module: "Apply Multitenancy Isolation Network Policies to Existing Projects | {{ module }}"
  pre_tasks:
    - name: Install required pip library
      pip:
        name: openshift
        state: present

    - name: Ensure Proper Python dependency is installed for Openshift
      python_requirements_facts:
        dependencies:
          - openshift
          - requests
    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          --token {{ ocp_cluster_token }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - ocp_cluster_token is defined and ocp_cluster_token != ""
      register: login_out

    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          -u {{ ocp_cluster_user }} \
          -p {{ ocp_cluster_user_password }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - not ocp_cluster_token is defined or ocp_cluster_token == ""
      register: login_out

  tasks:
    - name: '{{ ansible_name_module }} | {{ openshift_cli }} get | namespace request template'
      set_fact:
        namespaces_to_skip: "openshift|default|kube"
      when:
        - not namespaces_to_skip is defined or namespaces_to_skip == ''

    - name: '{{ ansible_name_module }} | {{ openshift_cli }} get | namespace request template'
      shell: >
        {{ openshift_cli }} get project --no-headers | egrep -vi '{{ namespaces_to_skip }}' | awk '{print $1}'
      ignore_errors: true
      register: existing_ns

    - name: '{{ ansible_name_module }} | Create Multi tenant Isolation Network Policy Manifests File'
      file:
        path: "/tmp/multitenant-isolation-networkpolicies.yml"
        state: touch
        mode: 0655

    - name: '{{ ansible_name_module }} | Add Markers to mark Managed Field block in Network Policy Manifest 1 of 2'
      lineinfile:
        path: "/tmp/multitenant-isolation-networkpolicies.yml"
        insertbefore: "parameters:"
        line: "# BEGIN ANSIBLE MANAGED BLOCK Adding Multitenant Network Policy Block"

    - name: '{{ ansible_name_module }} | Add Markers to mark Managed Field block in  Network Policy Manifest 2 of 2'
      lineinfile:
        path: "/tmp/multitenant-isolation-networkpolicies.yml"
        insertafter: "# BEGIN ANSIBLE MANAGED BLOCK Adding Multitenant Network Policy Block"
        line: "# END ANSIBLE MANAGED BLOCK Adding Multitenant Network Policy Block"

    - name: '{{ ansible_name_module }} | Add default MutliTenant Netwrk Policy Block'
      blockinfile:
        marker: "# {mark} ANSIBLE MANAGED BLOCK Adding Multitenant Network Policy Block"
        path: "/tmp/multitenant-isolation-networkpolicies.yml"
        state: present
        block: |
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-same-namespace
          spec:
            podSelector: {}
            ingress:
            - from:
              - podSelector: {}
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-openshift-ingress
          spec:
            ingress:
            - from:
              - namespaceSelector:
                  matchLabels:
                    network.openshift.io/policy-group: ingress
            podSelector: {}
            policyTypes:
            - Ingress
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-openshift-monitoring
          spec:
            ingress:
            - from:
              - namespaceSelector:
                  matchLabels:
                    network.openshift.io/policy-group: monitoring
            podSelector: {}
            policyTypes:
            - Ingress
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-kube-apiserver-operator
          spec:
            ingress:
            - from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: openshift-kube-apiserver-operator
                podSelector:
                  matchLabels:
                    app: kube-apiserver-operator
            policyTypes:
            - Ingress
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-olm
          spec:
            ingress:
              - from:
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: openshift-operators
            podSelector: {}
            policyTypes:
              - Ingress
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-ot
          spec:
            ingress:
              - from:
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: openshift-terminal
            podSelector: {}
            policyTypes:
              - Ingress
          ---
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-from-console
          spec:
            ingress:
              - from:
                - namespaceSelector:
                    matchLabels:
                      network.openshift.io/policy-group: console
            podSelector: {}
            policyTypes:
              - Ingress
      register: mnp_file_updated

    - name: '{{ ansible_name_module }} | lineinfile | Remove markers 1 of 2'
      lineinfile:
        path: "/tmp/multitenant-isolation-networkpolicies.yml"
        line: "# BEGIN ANSIBLE MANAGED BLOCK Adding Multitenant Network Policy Block"
        state: absent
      register: ns_template_marker_removed

    - name: '{{ ansible_name_module }} | lineinfile | Remove markers 2 of 2'
      lineinfile:
        path: "/tmp/multitenant-isolation-networkpolicies.yml"
        line: "# END ANSIBLE MANAGED BLOCK Adding Multitenant Network Policy Block"
        state: absent
      register: ns_template_marker_removed

    - name:  '{{ ansible_name_module }} | Apply Network Policy to existing projects'
      command: >
        {{ openshift_cli }} apply -f /tmp/multitenant-isolation-networkpolicies.yml -n {{ item }}
      loop: "{{ existing_ns.stdout_lines }}"
      when:
        - existing_ns is defined
        - existing_ns.rc is defined
        - existing_ns.rc == 0
        - existing_ns.stdout_lines is defined
        - existing_ns.stdout_lines | length > 0
        - item is defined
        - item != ''
      register: mnp_created

