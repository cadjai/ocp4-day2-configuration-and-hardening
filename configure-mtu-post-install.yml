- name: ' Konductor | Provision UPI Infra | configure-mtu-post-install.yml'
  hosts: localhost
  become: yes
  vars_files:
    - 'vars/vault.yml'
    - 'vars/global.yml'
  vars:
    ansible_python_interpreter: /usr/bin/python3.6
    module: "Configure MTU"
    ansible_name_module: " Post Cluster Installation | {{ module }}"
  pre_tasks:
    - name: '{{ ansible_name_module }} | import_role | OCP cluster login'
      import_role:
        name: ocp-cluster-login

  tasks:
    - name: '{{ ansible_name_module }} | Apply MTU Configuration'
      block:
        - name: '{{ ansible_name_module }} | get node roles'
          shell: >
            {{ openshift_cli }} get nodes --no-headers | awk '{print $3}' | grep -v ','| sort | uniq
          register: node_roles

        - name: '{{ ansible_name_module }} | template | Copy MTU config to staging location'
          template: 
            src: "templates/mtu-config.j2"
            dest: "{{ staging_dir | d('/tmp', true) }}/mtu-config"
            force: yes
          register: mtu_conf_copied

        - name: '{{ ansible_name_module }} | command:cat | Load mtu_config_conf'
          shell: cat {{ staging_dir | d('/tmp', true) }}/mtu-config 
          when:
            - mtu_conf_copied is defined
          register: mtu_config_conf_loaded

        - name: '{{ ansible_name_module }} | template | Copy MTU config to staging location'
          vars:
            mtu_config_data: "{{ mtu_config_conf_loaded.stdout }}"
            node_role: "{{ item }}"
          template: 
            src: "templates/mtu-config-mc.yml.j2"
            dest: "{{ staging_dir | d('/tmp', true) }}/mtu-config-mc-{{ item }}.yml"
            force: yes
          loop: "{{ node_roles.stdout_lines }}"
          when:
            - node_roles is defined
            - node_roles.stdout_lines is defined
            - node_roles.stdout_lines | length > 0
            - mtu_config_conf_loaded is defined
            - mtu_config_conf_loaded.rc is defined and mtu_config_conf_loaded.rc == 0
            - mtu_config_conf_loaded.stdout is defined and mtu_config_conf_loaded.stdout != ""
          register: mtu_config_mc_copied

        - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} apply | deploy MTU config '
          command: >
            {{ openshift_cli }} apply -f {{ staging_dir | d('/tmp', true) }}/mtu-config-mc-{{ item }}.yml 
          loop: "{{ node_roles.stdout_lines }}"
          when:
            - node_roles is defined
            - node_roles.stdout_lines is defined
            - node_roles.stdout_lines | length > 0
            - mtu_config_mc_copied is defined
          register: mtu_config_mc_deployed
