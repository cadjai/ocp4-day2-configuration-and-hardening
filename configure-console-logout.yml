- name: ' Configure Keycloak Provider | configure-oauthtimeouts.yml'
  hosts: localhost
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - 'vars/vault.yml'
    - 'vars/global.yml'
  vars:
    module: "Config Timeout"
    ansible_name_module: "Configure Banner | {{ module }}"
  pre_tasks:
    - name: Install required pip library
      pip:
        name: openshift
        state: present

    - name: Ensure Proper Python dependency is installed for Openshift
      python_requirements_facts:
        dependencies:
          - openshift
          - requests
    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          --token {{ ocp_cluster_token }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - ocp_cluster_token is defined and ocp_cluster_token != ""
      register: login_out

    - name: Authenticate with the API
      command: >
        {{ openshift_cli }} login \
          -u {{ ocp_cluster_user }} \
          -p {{ ocp_cluster_user_password }} \
          --insecure-skip-tls-verify=true {{ ocp_cluster_console_url }}:{{ ocp_cluster_console_port | d('6443', true) }}
      when:
        - not ocp_cluster_token is defined or ocp_cluster_token == ""
      register: login_out

    - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} | Get OpenID Issuer URL'
      #{{ openshift_cli }} get oauth cluster -o jsonpath='{.spec.identityProviders[-1].openID.issuer}{"\n"}'
      command: >
        {{ openshift_cli }} get oauth cluster -o jsonpath='{.spec.identityProviders[0].openID.issuer}{"\n"}'
      ignore_errors: yes
      register: openid_issuer

    - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} | Get console URL'
      command: >
        {{ openshift_cli }} whoami --show-console
      ignore_errors: yes
      register: console_url

  tasks:
    - name: '{{ ansible_name_module }} | Configure OpenID logout '
      when:
        - openid_issuer is defined
        - openid_issuer.rc is defined
        - openid_issuer.rc == 0 
        - openid_issuer.stdout is defined
        - openid_issuer.stdout != '' 
        - "'http' in openid_issuer.stdout"
      block:
        - name: '{{ ansible_name_module }} | command:set_fact | Set logout URL'
          #openid_logout_url: "{{ openid_issuer.stdout }}/protocol/openid-connect/logout?redirect_uri={{ openid_issuer.stdout | urlencode }}"
          set_fact:
            openid_logout_url: "{{ openid_issuer.stdout }}/protocol/openid-connect/logout?redirect_uri={{ (openid_issuer.stdout + '/.well-known/openid-configuration') | urlencode }}"

        - name: Print logout URL
          debug:
            var: openid_logout_url

        - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} | Patch Console config'
          command: >
            {{ openshift_cli }} patch console.config.openshift.io cluster --type merge -p '{"spec":{"authentication":{"logoutRedirect": "{{ openid_logout_url }}" }}}' 
          register: console_logout_url_updated


        - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} | Patch Console config'
          shell: >
            {{ openshift_cli }} get console.config.openshift.io cluster -o yaml | grep logoutRedirect
          register: updated_logout_URL

        - name: Print logout URL
          debug:
            var: updated_logout_URL

    - name: '{{ ansible_name_module }} | Configure Console logout '
      when:
        - not openid_issuer is defined or (use_console_logout is defined and use_console_logout | bool)
      block:
        - name: '{{ ansible_name_module }} | command:set_fact | Set logout URL'
          set_fact:
            console_logout_url: "{{ console_url.stdout }}?GLO=true"

        - name: Print logout URL
          debug:
            var: console_logout_url 

        - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} | Patch Console config'
          command: >
            {{ openshift_cli }} patch console.config.openshift.io cluster --type merge -p '{"spec":{"authentication":{"logoutRedirect": "{{ console_logout_url }}" }}}'
